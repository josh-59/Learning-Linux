
All modern operating systems support the abstraction of the <em>process</em>.
A process is a running program(http://pages.cs.wisc.edu/~remzi/OSTEP/cpu-intro.pdf).


Bash async:
        Invite friend to stay
    synchronous:
        Invite friend, they are expected to do something and then leave,
        so you wait for them to leave
            This is appropriate for things like, "list files in current directory"
            or "move this file over there"

Commands:
    ps - Who have I invited in
    ps -e - Who's here
    pstree- Who invited who
    vmstat- Who's using what


Process environment
    Each process has its own environment:
				Its own, separate, dedicated memory
        environment variables

        Command: Printenv: can be called by any process,
                            prints the environment inherited from that process
                            (which is given to printenv).

		    Current working directory:
				<p>
					Each process has a <em>current working directory</em>, whose
					value is maintained by the kernel; changing a process's
					current working directory requires the use of a system call.
				</p>

Multiprocess systems:
	Running more than one program at a time
	The kernel is home to many processes.
	The kernel does this by starting one process explicitly;
	this process then invites all of its friends.


	Inter-process communication:
			- Since each process has its own memory, sending messages between
				processes is not as simple as "select the process and write to its memory";
				Channels of inter-process communication must be supported by operating system,
				and then used appropriately by processes.
			- Signals

To Cover:
		Daemons
